setwd("C:/Users/jmaburto/Documents/GitHub/DecompMex/DecompMex")
load('Data/Counts&Rates_1990-2015Mex.RData')
Counts <- Data_Counts[,1:4]
Counts <- cbind(Counts, g1=rowSums(Data_Counts[, c(6,7,8,9,11)]))
Counts <- cbind(Counts, g2=Data_Counts[,10])
Counts <- cbind(Counts, g3=Data_Counts[,12])
Counts <- cbind(Counts, g4=Data_Counts[,13])
Counts <- cbind(Counts, g5=Data_Counts[,15])
Counts <- cbind(Counts, g6=Data_Counts[,16])
Counts <- cbind(Counts, g7=Data_Counts[,17])
Counts <- cbind(Counts, g8=Data_Counts[,18])
Counts <- cbind(Counts, g9=Data_Counts[,14])
Counts <- cbind(Counts, g10=rowSums(Data_Counts[,19:21]))
Counts <- cbind(Counts, g11=rowSums(Counts[,5:14]))
Counts$Pop <- Data_Counts$Pop
Rates <- Data_rates[,c(1:4,21)]
gdata::keep(Counts,Rates, sure = T)
library(data.table)
Counts <- data.table(Counts)
Rates <- data.table(Rates)
# Cause-specific smoothing -----------------------------------------------
#First smooth with Camarda's method. We smooth cause-specific deaths and then constrain to the unsmoothed rates
source("R/Functions.R")
library(reshape2)
library(MortalitySmooth)
causes   <- 5:15
Counts2  <- data.table(cbind(Counts[,1:4,with=F],g1= rowSums(Counts[,5:14,with=F]),Counts[,15,with=F]))
sm.rates <- data.table(as.matrix(Counts)[,1:4])
sm.rates2 <- data.table(as.matrix(Counts2)[,1:4])
sm.rates2  <- sm.rates2[order(year,sex,state,age)]
sm.rates  <- sm.rates[order(year,sex,state,age)]
#i <- 5
#Dx <- Counts[sex==1 & state ==1 ]
#DX      <- acast(Dx, age~year, value.var = colnames(Counts)[i], fill = 0)
#EX      <- acast(Dx, age~year, value.var = "Pop", fill = 0)
#r <- DX/EX
#image(log(r))
#r.s <- sm.mat(DX,EX)
#r.s2 <- acast(r.s, age~year, value.var = "mxs")
#image((log(r.s2)-log(r)))
# melt so that we just use data.table
for (i in causes){
Mxs      <- Counts[,sm.chunk(.SD,i),by=list(state,sex)]
Mxs  <- Mxs[order(year,sex,state,age)]
sm.rates[,paste0("g",i-4)] <- Mxs$mxs
print(i)
# cbind(sm.rates,i= Mxs$mxs)
}
causes
#smooth total mortality rates
Counts2$g1[Counts2$Pop == 0] <- 0
Counts2$g1[Counts2$Pop < Counts2$g1] <- Counts2$Pop[Counts2$Pop < Counts2$g1]
Mxs2      <- Counts2[,sm.chunk(.SD,5),by=list(state,sex)]
Mxs2 <- Mxs2[order(year,sex,state,age)]
Counts2  <- data.table(cbind(Counts[,1:4,with=F],g1= rowSums(Counts[,5:14,with=F]),Counts[,15,with=F]))
Counts2  <- data.table(cbind(Counts[,1:4,with=F],g1= rowSums(Counts[,5:14,with=F]),Counts[,15,with=F]),Pop=Counts[,16,with=F]))
Counts2  <- data.table(cbind(Counts[,1:4,with=F],g1= rowSums(Counts[,5:14,with=F]),Counts[,15,with=F]),Pop=Counts[,16,with=F])
Counts2  <- data.table(cbind(Counts[,1:4,with=F],g1= rowSums(Counts[,5:14,with=F]),Pop=Counts[,16,with=F]))
Counts2$g1[Counts2$Pop == 0] <- 0
Counts2$g1[Counts2$Pop < Counts2$g1] <- Counts2$Pop[Counts2$Pop < Counts2$g1]
Counts2  <- data.table(cbind(Counts[,1:4,with=F],g1= rowSums(Counts[,5:14,with=F]),Counts[,16,with=F]))
Counts2$g1[Counts2$Pop == 0] <- 0
Counts2$g1[Counts2$Pop < Counts2$g1] <- Counts2$Pop[Counts2$Pop < Counts2$g1]
Mxs2      <- Counts2[,sm.chunk(.SD,5),by=list(state,sex)]
View(sm.chunk)
Mxs2 <- Mxs2[order(year,sex,state,age)]
plot(Mxs2$mxs[Mxs2$state==1 & Mxs2$sex==1 & Mxs2$year==1990])
sm.rates2[,"Tot"] <- Mxs2$mxs
sm.rates <- sm.rates[order(year,sex,state,age)]
Rates <- Rates[order(year,sex,state,age)]
sm.r    <- sm.rates[,5:14,with=F]
sm.tot  <- rowSums(sm.r)
sm.prop <- sm.r/sm.tot
sm.prop2 <- sm.prop*Rates$total
smooth.rates <- cbind(as.matrix(Rates)[,1:4],mx=rowSums(sm.prop2),sm.prop2)
smooth.rates <- as.data.table(smooth.rates)
#now constrain to smoothed ones
sm.prop3 <- sm.prop*sm.rates2$Tot
smooth.rates2 <- cbind(as.matrix(Rates)[,1:4],mx=rowSums(sm.prop3),sm.prop3)
smooth.rates2 <- as.data.table(smooth.rates2)
#wihout constrain in smoothing by cause
sm.rates$mx <- sm.tot
colnames(sm.rates)
setcolorder(sm.rates,c("year","sex","state","age","mx","g1","g2","g3","g4","g5","g6","g7","g8","g9","g10"))
head(sm.rates)
# This file contains smooth rates constraint to the original ones
save(smooth.rates,file = "Data/smoothed rates_ConstraintOrig.RData")
save(smooth.rates2,file = "Data/smoothed rates_ConstraintSmooth.RData")
# This file contains smooth rates NOT constraint to the original ones
save(sm.rates,file = "Data/smoothed rates_No Constraint.RData")
save(sm.rates2,file = "Data/Total_Smooth.RData")
sm.r    <- sm.rates[,5:14,with=F]
sm.tot  <- rowSums(sm.r)
sm.prop <- sm.r/sm.tot
sm.prop2 <- sm.prop*Rates$total
smooth.rates <- cbind(as.matrix(Rates)[,1:4],mx=rowSums(sm.prop2),sm.prop2)
smooth.rates <- as.data.table(smooth.rates)
sm.prop3 <- sm.prop*sm.rates2$Tot
smooth.rates2 <- cbind(as.matrix(Rates)[,1:4],mx=rowSums(sm.prop3),sm.prop3)
smooth.rates2 <- as.data.table(smooth.rates2)
sm.rates$mx <- sm.tot
colnames(sm.rates)
sm.rates[,-15]
l <- sm.rates[,-15]
l <- sm.rates[,-15, with=F]
sm.rates <- sm.rates[,-15, with=F]
setcolorder(sm.rates,c("year","sex","state","age","mx","g1","g2","g3","g4","g5","g6","g7","g8","g9","g10"))
head(sm.rates)
save(smooth.rates,file = "Data/smoothed rates_ConstraintOrig.RData")
save(smooth.rates2,file = "Data/smoothed rates_ConstraintSmooth.RData")
# This file contains smooth rates NOT constraint to the original ones
save(sm.rates,file = "Data/smoothed rates_No Constraint.RData")
save(sm.rates2,file = "Data/Total_Smooth.RData")
setwd("C:/Users/jmaburto/Documents/GitHub/DecompMex/DecompMex")
source("R/Functions.R")
#Groups used in the article:
# 1. Amenable to meical service: 1+2+3+4+6
# 2. Diabetes: 5
# 3. IHD:7
# 4. HIV:8
# 5. Lung cancer: 10
# 6. Cirrhosis: 11
# 7. Homicide: 12
# 8. Road traffic: 13
# 9. Suicide: 9
# 10. All other causes: 14+15+16
library(data.table)
library(reshape2)
data       <- local(get(load("Data/smoothed rates_Constraint.RData")))
Mxsc       <- data[,-c(5),with=F]
Mxsc       <- melt.data.table(Mxsc,id.vars = 1:4,variable.name = "cause",value.name = "mx")
Mxscmin    <- Mxsc[,min(mx), by = list(year, sex, age, cause)]
Mxsmin     <- Mxscmin[,sum(V1),by=list(year, sex, age)]
setnames(Mxsmin,4,"mx_min")
# object with minimum death rates for every year by sex and age
head(Mxsmin)
BPlx <- Mxsmin[,lx:=myLTlx(mx_min, sex), by = list(year,sex)]
BPlx[,Lx:=lx2Lx(lx),by = list(year,sex)]
# get temp e0 for BP
bpe0_14       <- BPlx[,getTempe0(.SD),by=list(year, sex)]
bpe0_14$state <- 33
bpe0_14$age.g <- 1
bpe15_39 <- BPlx[,getTempe0(.SD,15,39),by=list(year, sex)]
bpe15_39$state <- 33
bpe15_39$age.g <- 2
bpe40_74 <- BPlx[,getTempe0(.SD,40,74),by=list(year, sex)]
bpe40_74$state <- 33
bpe40_74$age.g <- 3
BP_temp <- rbind(bpe0_14,bpe15_39,bpe40_74)
setnames(BP_temp,"V1","temp_e0")
#######################################
# now do calcs for states
#######################################
#gdata:: keep(Mxsc,data,BP_temp,sure=T)
Mxs         <- data[,1:5,with=F]
#setnames(Mxs,"Tot","mx")
Stateslx    <- Mxs[,lx:=myLTlx(mx, sex), by = list(state,year, sex)]
Stateslx    <- Stateslx[,Lx := lx2Lx(lx), by = list(state,year, sex)]
head(Stateslx)
# now get temp e0 for states
ste0_14     <- Stateslx[,getTempe0(.SD,lowera = 0, uppera = 14),by=list(state,year, sex)]
ste0_14$age.g <-1
ste15_39    <- Stateslx[,getTempe0(.SD,lowera=15,uppera=39),by=list(state,year, sex)]
ste15_39$age.g <-2
ste40_74    <- Stateslx[,getTempe0(.SD,lowera=40,uppera=74),by=list(state,year, sex)]
ste40_74$age.g <-3
ste_temp <- rbind(ste0_14,ste15_39,ste40_74)
setnames(ste_temp,"V1","temp_e0")
head(ste_temp)
####### Now find vanguard temporary life expectancy
van_temp <- ste_temp[,max(temp_e0), by = list(year,sex,age.g)]
van_temp$state <- 34
setnames(van_temp,"V1","temp_e0")
head(van_temp)
#### create an object with all temp data
temp.data <- rbind(BP_temp,ste_temp,van_temp)
temp.data <- temp.data[order(year,sex,state,age.g)]
save(data,temp.data,Mxsc,file = "Data/Temp_e0_results.RData")
setwd("C:/Users/jmaburto/Documents/GitHub/DecompMex/DecompMex")
library(latticeExtra)
library(data.table)
load("Data/Temp_e0_results.RData")
source("R/Functions_fig.R")
fig1.data <- temp.data
fig1.data$age.g <- factor(fig1.data$age.g,levels = 1:3, labels = c("Young (0-14)","Young adults (15-39)","Older adults (40-74)"))
fig1.data$sex<- factor(fig1.data$sex,levels = 1:2, labels = c("Males","Females"))
Fig1 <- useOuterStrips(xyplot(temp_e0 ~ year|age.g+sex,groups = state,data = fig1.data,type="l",
col= c(rep(makeTransparent("black",alpha=65),32),"blue","red"),lwd=2,between=list(x=1,y=1),
key=list(space="bottom",background="transparent",text=list(c('State','Record holder','Low benchmark'),
col="black"),cex=1,lines=list(lty=1,lwd=2,col=c("black","red","blue"))),
xlab="",ylab = "Average survival (years)",par.settings=my.settings,par.strip.text=list(cex=1.3),
scales = list(alternating=1,x=list(cex=.9,at=c(seq(1990,2015,5))),y = list(relation = "free",cex=.9),tck=c(1,0)),
#ylim = list(range(pretty(fig1.data[fig1.data$age.g=="Young (0-14)"]$temp_e0)),
#            range(pretty(fig1.data[fig1.data$age.g=="Young adults (15-39)"]$temp_e0)),
#           range(pretty(fig1.data[fig1.data$age.g=="Older adults (40-74)"]$temp_e0))),
ylim = list(c(14,15),
c(22.5,25),
c(28,35)),
panel = function(x, y, ...){
panel.abline(v=c(seq(1990,2015,5)),col='dark grey',lty=3)
panel.abline(h=c(15),col="black",lty=1)
panel.abline(h=c(25),col="black",lty=1)
panel.abline(h=c(35),col="black",lty=1)
panel.xyplot(x, y,lty=1,...)
}),strip.left = T, strip=F)
Fig1
View(fig1.data)
Fig1 <- useOuterStrips(xyplot(temp_e0 ~ year|age.g+sex,groups = state,data = fig1.data[state!=34],type="l",
col= c(rep(makeTransparent("black",alpha=65),32),"blue"),lwd=2,between=list(x=1,y=1),
key=list(space="bottom",background="transparent",text=list(c('State','Record holder','Low benchmark'),
col="black"),cex=1,lines=list(lty=1,lwd=2,col=c("black","red","blue"))),
xlab="",ylab = "Average survival (years)",par.settings=my.settings,par.strip.text=list(cex=1.3),
scales = list(alternating=1,x=list(cex=.9,at=c(seq(1990,2015,5))),y = list(relation = "free",cex=.9),tck=c(1,0)),
#ylim = list(range(pretty(fig1.data[fig1.data$age.g=="Young (0-14)"]$temp_e0)),
#            range(pretty(fig1.data[fig1.data$age.g=="Young adults (15-39)"]$temp_e0)),
#           range(pretty(fig1.data[fig1.data$age.g=="Older adults (40-74)"]$temp_e0))),
ylim = list(c(14,15),
c(22.5,25),
c(28,35)),
panel = function(x, y, ...){
panel.abline(v=c(seq(1990,2015,5)),col='dark grey',lty=3)
panel.abline(h=c(15),col="black",lty=1)
panel.abline(h=c(25),col="black",lty=1)
panel.abline(h=c(35),col="black",lty=1)
panel.xyplot(x, y,lty=1,...)
}),strip.left = T, strip=F)
Fig1
Fig1 <- useOuterStrips(xyplot(temp_e0 ~ year|age.g+sex,groups = state,data = fig1.data[state!=34],type="l",
col= c(rep(makeTransparent("black",alpha=65),32),"blue"),lwd=2,between=list(x=1,y=1),
key=list(space="bottom",background="transparent",text=list(c('State','Low benchmark'),
col="black"),cex=1,lines=list(lty=1,lwd=2,col=c("black","blue"))),
xlab="",ylab = "Average survival (years)",par.settings=my.settings,par.strip.text=list(cex=1.3),
scales = list(alternating=1,x=list(cex=.9,at=c(seq(1990,2015,5))),y = list(relation = "free",cex=.9),tck=c(1,0)),
#ylim = list(range(pretty(fig1.data[fig1.data$age.g=="Young (0-14)"]$temp_e0)),
#            range(pretty(fig1.data[fig1.data$age.g=="Young adults (15-39)"]$temp_e0)),
#           range(pretty(fig1.data[fig1.data$age.g=="Older adults (40-74)"]$temp_e0))),
ylim = list(c(14,15),
c(22.5,25),
c(28,35)),
panel = function(x, y, ...){
panel.abline(v=c(seq(1990,2015,5)),col='dark grey',lty=3)
panel.abline(h=c(15),col="black",lty=1)
panel.abline(h=c(25),col="black",lty=1)
panel.abline(h=c(35),col="black",lty=1)
panel.xyplot(x, y,lty=1,...)
}),strip.left = T, strip=F)
Fig1
# print and save figures
pdf("Manuscript/bmc_Manuscript/Figure1.pdf",width=12,height=7)
print(Fig1)
dev.off()
### some querys for the paper
fig1.data$Statenom <- fig1.data$state
fig1.data$Statenom  <- factor(fig1.data$Statenom ,levels=c(1:34),
labels=c("Aguascalientes","Baja California","Baja California Sur",
"Campeche","Coahuila","Colima","Chiapas","Chihuahua",
"Mexico City","Durango","Guanajuato","Guerrero",
"Hidalgo","Jalisco","Mexico State","Michoacan","Morelos",
"Nayarit","Nuevo Leon","Oaxaca","Puebla","Queretaro",
"Quintana Roo","San Luis Potosi","Sinaloa","Sonora",
"Tabasco","Tamaulipas","Tlaxcala","Veracruz","Yucatan",
"Zacatecas","Benchmark","Record"))
tab.state <- function(age,yr,sx){
setorder(fig1.data[year == yr & age.g==as.character(unique(fig1.data$age.g)[age]) & sex==sx],temp_e0)[]}
tab.state(3,2015,"Males")
tab.state(1,2015,"Males")
tab.state(1,2015,"Males")
mean(tab.state(3,2015,"Females")$temp_e0[-c(33,34)])
mean(tab.state(3,2015,"Males")$temp_e0[-c(33,34)])
mean(tab.state(3,2005,"Females")$temp_e0[-c(33,34)])
mean(tab.state(3,2005,"Males")$temp_e0[-c(33,34)])
tab.state(1,2015,"Males")
tab.state(3,2015,"Males")
giniSimple <- function(x){
N          <- length(x)
S          <- sum(x)
xlorenz    <- cumsum(sort(x)) / S
xequal     <- cumsum(rep(S / N, N)) / S
2 * sum(xequal - xlorenz)
}
my.settings <- list(
strip.background=list(col="grey"),
strip.border=list(col="black")
)
load("Data/Temp_e0_results.RData")
Greens           <- brewer.pal(5,"Greens")[2:5]
temp.data <- temp.data[state < 33]
tot.tempe0.st <- temp.data[,sum(temp_e0), by = list(year,sex,state)]
tot.gini <- tot.tempe0.st[,giniSimple(V1), by = list(year,sex)]
tot.gini$age.g <- 4
setcolorder(tot.gini,c("year","sex","age.g","V1"))
gini.states <- temp.data[,giniSimple(temp_e0), by = list(year,sex,age.g)]
gini.states <- rbind(gini.states,tot.gini)
gini.states$sex <- factor(gini.states$sex,levels=c(1,2),labels=c("Males", "Females"))
Gini.fig <-xyplot(V1~year|sex,data=gini.states,groups=age.g,type="l",lwd=2,between=list(x=1),
xlim=c(1990,2015),ylim=c(0,.6),ylab="Gini coefficient",
layout=c(2,1),strip.left=F,strip=T,
col=Greens,par.settings=my.settings,xlab="Year",
key=list(x=.2,y=.9,background="transparent",
text=list(c('Young (0-14)','Young adults(15-39)','Older adults(40-74)','Total (0-74)'),
col="black"),cex=1,
lines=list(lty=c(1,1,1,2),lwd=2,col=Greens)),
scales=list(alternating=1,x=list(cex=.75,at=c(seq(1990,2015,5))),
y=list(cex=.75,at=seq(0,.5,.1),alternating=1)),
panel = function(x, y,...){
panel.abline(v=c(seq(1990,2015,5)),col='dark grey',lty=3)
panel.abline(h=c(seq(0,.5,.1)),col='dark grey',lty=3)
panel.xyplot(x, y,lty=c(1,1,1,2),...)
})
Gini.fig
setwd("C:/Users/jmaburto/Documents/GitHub/DecompMex/DecompMex")
source("R/Functions.R")
#Groups used in the article:
# 1. Amenable to meical service: 1+2+3+4+6
# 2. Diabetes: 5
# 3. IHD:7
# 4. HIV:8
# 5. Lung cancer: 10
# 6. Cirrhosis: 11
# 7. Homicide: 12
# 8. Road traffic: 13
# 9. Suicide: 9
# 10. All other causes: 14+15+16
library(data.table)
library(reshape2)
data       <- local(get(load("Data/smoothed rates_ConstraintSmooth.RData")))
data       <- local(get(load("Data/smoothed rates_ConstraintSmooth.RData")))
Mxsc       <- data[,-c(5),with=F]
Mxsc       <- melt.data.table(Mxsc,id.vars = 1:4,variable.name = "cause",value.name = "mx")
Mxscmin    <- Mxsc[,min(mx), by = list(year, sex, age, cause)]
Mxsmin     <- Mxscmin[,sum(V1),by=list(year, sex, age)]
setnames(Mxsmin,4,"mx_min")
# object with minimum death rates for every year by sex and age
head(Mxsmin)
#######################################
# now get best practive lx and Lx, don't really need BP e0
#BPe0 <- Mxsmin[,myLT(mx_min, sex), by = list(year,sex)]
BPlx <- Mxsmin[,lx:=myLTlx(mx_min, sex), by = list(year,sex)]
BPlx[,Lx:=lx2Lx(lx),by = list(year,sex)]
# get temp e0 for BP
bpe0_14       <- BPlx[,getTempe0(.SD),by=list(year, sex)]
bpe0_14$state <- 33
bpe0_14$age.g <- 1
bpe15_39 <- BPlx[,getTempe0(.SD,15,39),by=list(year, sex)]
bpe15_39$state <- 33
bpe15_39$age.g <- 2
bpe40_74 <- BPlx[,getTempe0(.SD,40,74),by=list(year, sex)]
bpe40_74$state <- 33
bpe40_74$age.g <- 3
BP_temp <- rbind(bpe0_14,bpe15_39,bpe40_74)
setnames(BP_temp,"V1","temp_e0")
#######################################
# now do calcs for states
#######################################
#gdata:: keep(Mxsc,data,BP_temp,sure=T)
Mxs         <- data[,1:5,with=F]
#setnames(Mxs,"Tot","mx")
Stateslx    <- Mxs[,lx:=myLTlx(mx, sex), by = list(state,year, sex)]
Stateslx    <- Stateslx[,Lx := lx2Lx(lx), by = list(state,year, sex)]
head(Stateslx)
# now get temp e0 for states
ste0_14     <- Stateslx[,getTempe0(.SD,lowera = 0, uppera = 14),by=list(state,year, sex)]
ste0_14$age.g <-1
ste15_39    <- Stateslx[,getTempe0(.SD,lowera=15,uppera=39),by=list(state,year, sex)]
ste15_39$age.g <-2
ste40_74    <- Stateslx[,getTempe0(.SD,lowera=40,uppera=74),by=list(state,year, sex)]
ste40_74$age.g <-3
ste_temp <- rbind(ste0_14,ste15_39,ste40_74)
setnames(ste_temp,"V1","temp_e0")
head(ste_temp)
####### Now find vanguard temporary life expectancy
van_temp <- ste_temp[,max(temp_e0), by = list(year,sex,age.g)]
van_temp$state <- 34
setnames(van_temp,"V1","temp_e0")
head(van_temp)
#### create an object with all temp data
temp.data <- rbind(BP_temp,ste_temp,van_temp)
temp.data <- temp.data[order(year,sex,state,age.g)]
save(data,temp.data,Mxsc,file = "Data/Temp_e0_results.RData")
Gini.fig
giniSimple <- function(x){
N          <- length(x)
S          <- sum(x)
xlorenz    <- cumsum(sort(x)) / S
xequal     <- cumsum(rep(S / N, N)) / S
2 * sum(xequal - xlorenz)
}
my.settings <- list(
strip.background=list(col="grey"),
strip.border=list(col="black")
)
load("Data/Temp_e0_results.RData")
Greens           <- brewer.pal(5,"Greens")[2:5]
temp.data <- temp.data[state < 33]
tot.tempe0.st <- temp.data[,sum(temp_e0), by = list(year,sex,state)]
tot.gini <- tot.tempe0.st[,giniSimple(V1), by = list(year,sex)]
tot.gini$age.g <- 4
setcolorder(tot.gini,c("year","sex","age.g","V1"))
gini.states <- temp.data[,giniSimple(temp_e0), by = list(year,sex,age.g)]
gini.states <- rbind(gini.states,tot.gini)
gini.states$sex <- factor(gini.states$sex,levels=c(1,2),labels=c("Males", "Females"))
Gini.fig <-xyplot(V1~year|sex,data=gini.states,groups=age.g,type="l",lwd=2,between=list(x=1),
xlim=c(1990,2015),ylim=c(0,.6),ylab="Gini coefficient",
layout=c(2,1),strip.left=F,strip=T,
col=Greens,par.settings=my.settings,xlab="Year",
key=list(x=.2,y=.9,background="transparent",
text=list(c('Young (0-14)','Young adults(15-39)','Older adults(40-74)','Total (0-74)'),
col="black"),cex=1,
lines=list(lty=c(1,1,1,2),lwd=2,col=Greens)),
scales=list(alternating=1,x=list(cex=.75,at=c(seq(1990,2015,5))),
y=list(cex=.75,at=seq(0,.5,.1),alternating=1)),
panel = function(x, y,...){
panel.abline(v=c(seq(1990,2015,5)),col='dark grey',lty=3)
panel.abline(h=c(seq(0,.5,.1)),col='dark grey',lty=3)
panel.xyplot(x, y,lty=c(1,1,1,2),...)
})
Gini.fig
cv <- function(x){ y <- sd(x)/mean(x)
y}
tot.tempe0.st <- temp.data[,sum(temp_e0), by = list(year,sex,state)]
tot.cv <- tot.tempe0.st[,cv(V1), by = list(year,sex)]
tot.cv$age.g <- 4
setcolorder(tot.cv,c("year","sex","age.g","V1"))
cv.states <- temp.data[,cv(temp_e0), by = list(year,sex,age.g)]
cv.states <- rbind(cv.states,tot.cv)
cv.states$sex <- factor(cv.states$sex,levels=c(1,2),labels=c("Males", "Females"))
cv.fig <-xyplot(V1~year|sex,data=cv.states,groups=age.g,type="l",lwd=2,between=list(x=1),
xlim=c(1990,2015),main="Survival inequality",
#ylim=c(0,.6),
ylab="Coefficient of variation",
layout=c(2,1),strip.left=F,strip=T,
col=Greens,par.settings=my.settings,xlab="Year",
key=list(x=.2,y=.9,background="transparent",
text=list(c('Young (0-14)','Young adults(15-39)','Older adults(40-74)','Total (0-74)'),
col="black"),cex=1,
lines=list(lty=c(1,1,1,2),lwd=2,col=Greens)),
scales=list(x=list(cex=.75,at=c(seq(1990,2015,5))),
y=list(cex=.75,at=seq(0,.025,.005),alternating=1)),
panel = function(x, y,...){
panel.abline(v=c(seq(1990,2015,5)),col='dark grey',lty=3)
panel.abline(h=c(seq(0,.025,.005)),col='dark grey',lty=3)
panel.xyplot(x, y,lty=c(1,1,1,2),...)
})
cv.fig
