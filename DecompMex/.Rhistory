wb = df_CEPAL2004,
t = 'CEPAL2004'))
CEPAL2010 <- do.call(rbind,
lapply(1:numberofsheets10,
FUN = excel.to.R,
wb = df_CEPAL2010,
t = 'CEPAL2010'))
CEPAL_LT <- data.table(rbind(CEPAL2004,CEPAL2010))
# I need to create a reference year variable, the midpoint of the interval
ini.y             <- as.numeric(substr(CEPAL_LT$Year, 1, 4))
fin.y             <- as.numeric(substr(CEPAL_LT$Year, 6, 9))
CEPAL_LT$ref.year <- (fin.y + ini.y)/2
CEPAL_LT$Country  <- toupper(CEPAL_LT$Country)
CEPAL_LT$Edad.Age <- as.numeric(CEPAL_LT$Edad.Age)
CEPAL_LT$n        <- as.numeric(CEPAL_LT$n)
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec, sure=T)
#Harmonize names
CEPAL_LT[CEPAL_LT$Country=="PLURINATIONAL STATE OF BOLIVIA"]$Country <- Country.name.vec[22]
# add code accordingly
names(Country.code.vec)   <- Country.name.vec
CEPAL_LT$code             <- Country.code.vec[as.character(CEPAL_LT$Country)]
unique(CEPAL_LT$code)
CEPAL_LT <- CEPAL_LT[CEPAL_LT$Year > 1989]
# UN lifetables  ----------------------------------------------------------
# read files and merge them
UN_female <- read.csv("Data/UN_Female_LT.csv",header = T,stringsAsFactors = F)
UN_female$Sex <- 2
UN_Male   <- read.csv("Data/UN_Male_LT.csv",header = T, stringsAsFactors = F)
UN_Male$Sex <- 1
UN_LT     <- data.table(rbind(UN_female,UN_Male))
#Transform strange symbol to NA
s               <- UN_LT[UN_LT$Age==85]$px[1]
UN_LT[UN_LT==s] <- NA
UN_LT$px        <- as.numeric(UN_LT$px)
UN_LT$qx        <- as.numeric(UN_LT$qx)
UN_LT$Sr        <- as.numeric(UN_LT$Sr)
UN_LT$Country   <- toupper(UN_LT$Country)
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT, sure=T)
# Check consistency with our codes, first identify those not in the UN datasaet
unique(UN_LT$Country)
unlist(lapply(1:24,function(x){unique(UN_LT$Country)[which(unique(UN_LT$Country) == Country.name.vec[x])]}))
# 20, 22 and 24 -> 2470 (Venezuela), 2060 (Bolivia) , 9999 (Latin America)
UN_LT[UN_LT$Country == "VENEZUELA (BOLIVARIAN REPUBLIC OF)"]$Country <- Country.name.vec[20]
UN_LT[UN_LT$Country == "BOLIVIA (PLURINATIONAL STATE OF)"]$Country   <- Country.name.vec[22]
UN_LT[UN_LT$Country == "LATIN AMERICA AND THE CARIBBEAN"]$Country    <- Country.name.vec[24]
# just keep those we are interested in
UN_LT <- UN_LT[UN_LT$Country %in% Country.name.vec,]
# I need to create a reference year variable, the midpoint of the interval
ini.y             <- as.numeric(substr(UN_LT$Period, 1, 4))
fin.y             <- as.numeric(substr(UN_LT$Period, 6, 9))
UN_LT$ref.year <- (fin.y + ini.y)/2
# keep info from 1990
UN_LT <- UN_LT[UN_LT$ref.year > 1989,]
# add code accordingly
names(Country.code.vec)   <- Country.name.vec
UN_LT$code                <- Country.code.vec[as.character(UN_LT$Country)]
UN_LT$Source <- "UN"
unique(UN_LT$code)
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT, sure=T)
# Lambda lifetables  ----------------------------------------------------------
Lambda_LT         <- read.csv("Data/LAMbDA_LF.csv",header = T,stringsAsFactors = F)
Lambda_LT         <- data.table(Lambda_LT)
Lambda_LT         <- Lambda_LT[Lambda_LT$Year > 1989,]
Lambda_LT[Lambda_LT$Sex == 'M',]$Sex <- 1
Lambda_LT[Lambda_LT$Sex == 'F',]$Sex <- 2
Lambda_LT$Sex     <- as.numeric(Lambda_LT$Sex)
Lambda_LT$Country <- toupper(Lambda_LT$Country)
Lambda_LT$code    <- Country.code.vec[as.character(Lambda_LT$Country)]
Lambda_LT$Source  <- "Lambda"
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT,Lambda_LT, sure=T)
### Merge all datasets together
names.1 <- c('Year','Period','Age','Sex','Country','Code','Source','mx','qx','ex')
DF1     <- CEPAL_LT[,c('ref.year','Year','Edad.Age','Gender','Country','code','Source','m.x.n.','q.x.n.','e.x.')]
DF2     <- UN_LT[,c('ref.year','Period','Age','Sex','Country','code','Source','mx','qx','ex')]
DF3     <- Lambda_LT[,c('Year','Year','Age','Sex','Country','code','Source','mx','qx','ex')]
colnames(DF1) <- names.1
colnames(DF2) <- names.1
colnames(DF3) <- names.1
Data.LT <- rbind(DF1,DF2,DF3)
Data.LT <- Data.LT[Data.LT$Year <= 2015,]
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT,Lambda_LT,Data.LT, sure=T)
# Statistical offices lifetables  ----------------------------------------------------------
# gender, 1 = Male, 2 = Female
# read excel files from lifetables cjecked by Aakash
df_SO1    <- loadWorkbook("Data/Lifetables SOfromPDF.xlsx")
df_SO2    <- loadWorkbook("Data/Lifetables SOfromExc.xlsx")
# get number of sheets
numberofsheetsSO1 <- length(getSheets(df_SO1))
numberofsheetsSO2 <- length(getSheets(df_SO2))
SO1 <- do.call(rbind,
lapply(1:numberofsheetsSO1,
FUN = excel.to.R2,
wb = df_SO1,
t = 'SO'))
SO2 <- do.call(rbind,
lapply(1:numberofsheetsSO2,
FUN = excel.to.R2,
wb = df_SO2,
t = 'SO'))
SO1$Year <- as.numeric(SO1$Year)
SO2$Year <- as.numeric(SO2$Year)
SO1$mx   <- as.numeric(SO1$mx)
SO1$qx   <- as.numeric(SO1$qx)
SO1$ex   <- as.numeric(SO1$ex)
SO2$mx   <- as.numeric(SO2$mx)
SO_LT   <- data.table(rbind(SO1,SO2))
Data.LT <- rbind(Data.LT,SO_LT)
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT,Lambda_LT,Data.LT,SO_LT, sure=T)
df_Mex    <- loadWorkbook("Data/Lifetables SOfromMex.xlsx")
# get number of sheets
numberofsheetsMex <- length(getSheets(df_Mex))
Mex <- do.call(rbind,
lapply(1:numberofsheetsMex,
FUN = excel.to.R2,
wb = df_Mex,
t = 'SO'))
Mex$mx <- as.numeric(Mex$mx)
Mex$qx <- as.numeric(Mex$qx)
Data.LT <- rbind(Data.LT,Mex)
# Data with life expectancy -----------------------------------------------
ex     <- Data.LT[Data.LT$Age==0,]
ex$Sex <- as.numeric(ex$Sex)
ex$Sex <- factor(ex$Sex,levels = c(1, 2), labels = c("Males", "Females"))
ex <- as.data.frame(ex)
save(ex,file= "R/ex_App/Life_expectancy.RData")
setwd("C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA/R/ex_App/")
library(shiny)
library(ggplot2)
rsconnect::setAccountInfo(name='jmaburto',
token='7310E08D0D081D3C3CABCAA90D18045E',
secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
load('Life_expectancy.RData')
name <- "CHILE"
ggplot(ex[ex$Country == name,], aes(Year,ex))+
geom_line(aes(colour = Source), lwd=1)+
geom_point(aes(shape = Source,colour = Source),cex=5)+
scale_shape_manual(values=c(16:20))+
theme(strip.text.x = element_text(size = 15))+
facet_wrap(~Sex,ncol = 2)
ex[ex$Country == "CHILE" & ex$Source == "SO",]
runApp()
Country.code.vec
library(data.table)
library(reshape2)
library(latticeExtra)
library(XLConnect)
setwd("C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA/")
#load useful function I created to convert excel to dataframes
source("R/Functions.R")
# CEPAL lifetables (2004 & 2010) ------------------------------------------
# gender, 1 = Male, 2 = Female
# read excel files from lifetables cjecked by Aakash
df_CEPAL2004     <- loadWorkbook("Data/Lifetables CEPAL 2004.xlsx")
df_CEPAL2010     <- loadWorkbook("Data/Lifetables CEPAL 2010.xlsx")
# get number of sheets
numberofsheets04 <- length(getSheets(df_CEPAL2004))
numberofsheets10 <- length(getSheets(df_CEPAL2010))
CEPAL2004 <- do.call(rbind,
lapply(1:numberofsheets04,
FUN = excel.to.R,
wb = df_CEPAL2004,
t = 'CEPAL2004'))
CEPAL2010 <- do.call(rbind,
lapply(1:numberofsheets10,
FUN = excel.to.R,
wb = df_CEPAL2010,
t = 'CEPAL2010'))
CEPAL_LT <- data.table(rbind(CEPAL2004,CEPAL2010))
# I need to create a reference year variable, the midpoint of the interval
ini.y             <- as.numeric(substr(CEPAL_LT$Year, 1, 4))
fin.y             <- as.numeric(substr(CEPAL_LT$Year, 6, 9))
CEPAL_LT$ref.year <- (fin.y + ini.y)/2
CEPAL_LT$Country  <- toupper(CEPAL_LT$Country)
CEPAL_LT$Edad.Age <- as.numeric(CEPAL_LT$Edad.Age)
CEPAL_LT$n        <- as.numeric(CEPAL_LT$n)
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec, sure=T)
#Harmonize names
CEPAL_LT[CEPAL_LT$Country=="PLURINATIONAL STATE OF BOLIVIA"]$Country <- Country.name.vec[22]
# add code accordingly
names(Country.code.vec)   <- Country.name.vec
CEPAL_LT$code             <- Country.code.vec[as.character(CEPAL_LT$Country)]
unique(CEPAL_LT$code)
CEPAL_LT <- CEPAL_LT[CEPAL_LT$Year > 1989]
# UN lifetables  ----------------------------------------------------------
# read files and merge them
UN_female <- read.csv("Data/UN_Female_LT.csv",header = T,stringsAsFactors = F)
UN_female$Sex <- 2
UN_Male   <- read.csv("Data/UN_Male_LT.csv",header = T, stringsAsFactors = F)
UN_Male$Sex <- 1
UN_LT     <- data.table(rbind(UN_female,UN_Male))
#Transform strange symbol to NA
s               <- UN_LT[UN_LT$Age==85]$px[1]
UN_LT[UN_LT==s] <- NA
UN_LT$px        <- as.numeric(UN_LT$px)
UN_LT$qx        <- as.numeric(UN_LT$qx)
UN_LT$Sr        <- as.numeric(UN_LT$Sr)
UN_LT$Country   <- toupper(UN_LT$Country)
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT, sure=T)
# Check consistency with our codes, first identify those not in the UN datasaet
unique(UN_LT$Country)
unlist(lapply(1:24,function(x){unique(UN_LT$Country)[which(unique(UN_LT$Country) == Country.name.vec[x])]}))
# 20, 22 and 24 -> 2470 (Venezuela), 2060 (Bolivia) , 9999 (Latin America)
UN_LT[UN_LT$Country == "VENEZUELA (BOLIVARIAN REPUBLIC OF)"]$Country <- Country.name.vec[20]
UN_LT[UN_LT$Country == "BOLIVIA (PLURINATIONAL STATE OF)"]$Country   <- Country.name.vec[22]
UN_LT[UN_LT$Country == "LATIN AMERICA AND THE CARIBBEAN"]$Country    <- Country.name.vec[24]
# just keep those we are interested in
UN_LT <- UN_LT[UN_LT$Country %in% Country.name.vec,]
# I need to create a reference year variable, the midpoint of the interval
ini.y             <- as.numeric(substr(UN_LT$Period, 1, 4))
fin.y             <- as.numeric(substr(UN_LT$Period, 6, 9))
UN_LT$ref.year <- (fin.y + ini.y)/2
# keep info from 1990
UN_LT <- UN_LT[UN_LT$ref.year > 1989,]
# add code accordingly
names(Country.code.vec)   <- Country.name.vec
UN_LT$code                <- Country.code.vec[as.character(UN_LT$Country)]
UN_LT$Source <- "UN"
unique(UN_LT$code)
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT, sure=T)
# Lambda lifetables  ----------------------------------------------------------
Lambda_LT         <- read.csv("Data/LAMbDA_LF.csv",header = T,stringsAsFactors = F)
Lambda_LT         <- data.table(Lambda_LT)
Lambda_LT         <- Lambda_LT[Lambda_LT$Year > 1989,]
Lambda_LT[Lambda_LT$Sex == 'M',]$Sex <- 1
Lambda_LT[Lambda_LT$Sex == 'F',]$Sex <- 2
Lambda_LT$Sex     <- as.numeric(Lambda_LT$Sex)
Lambda_LT$Country <- toupper(Lambda_LT$Country)
Lambda_LT$code    <- Country.code.vec[as.character(Lambda_LT$Country)]
Lambda_LT$Source  <- "Lambda"
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT,Lambda_LT, sure=T)
### Merge all datasets together
names.1 <- c('Year','Period','Age','Sex','Country','Code','Source','mx','qx','ex')
DF1     <- CEPAL_LT[,c('ref.year','Year','Edad.Age','Gender','Country','code','Source','m.x.n.','q.x.n.','e.x.')]
DF2     <- UN_LT[,c('ref.year','Period','Age','Sex','Country','code','Source','mx','qx','ex')]
DF3     <- Lambda_LT[,c('Year','Year','Age','Sex','Country','code','Source','mx','qx','ex')]
colnames(DF1) <- names.1
colnames(DF2) <- names.1
colnames(DF3) <- names.1
Data.LT <- rbind(DF1,DF2,DF3)
Data.LT <- Data.LT[Data.LT$Year <= 2015,]
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT,Lambda_LT,Data.LT, sure=T)
# Statistical offices lifetables  ----------------------------------------------------------
# gender, 1 = Male, 2 = Female
# read excel files from lifetables cjecked by Aakash
df_SO1    <- loadWorkbook("Data/Lifetables SOfromPDF.xlsx")
df_SO2    <- loadWorkbook("Data/Lifetables SOfromExc.xlsx")
# get number of sheets
numberofsheetsSO1 <- length(getSheets(df_SO1))
numberofsheetsSO2 <- length(getSheets(df_SO2))
SO1 <- do.call(rbind,
lapply(1:numberofsheetsSO1,
FUN = excel.to.R2,
wb = df_SO1,
t = 'SO'))
SO2 <- do.call(rbind,
lapply(1:numberofsheetsSO2,
FUN = excel.to.R2,
wb = df_SO2,
t = 'SO'))
SO1$Year <- as.numeric(SO1$Year)
SO2$Year <- as.numeric(SO2$Year)
SO1$mx   <- as.numeric(SO1$mx)
SO1$qx   <- as.numeric(SO1$qx)
SO1$ex   <- as.numeric(SO1$ex)
SO2$mx   <- as.numeric(SO2$mx)
SO_LT   <- data.table(rbind(SO1,SO2))
Data.LT <- rbind(Data.LT,SO_LT)
gdata::keep(CEPAL_LT,excel.to.R,excel.to.R2,Country.code.vec,Country.name.vec,UN_LT,Lambda_LT,Data.LT,SO_LT, sure=T)
df_Mex    <- loadWorkbook("Data/Lifetables SOfromMex.xlsx")
# get number of sheets
numberofsheetsMex <- length(getSheets(df_Mex))
Mex <- do.call(rbind,
lapply(1:numberofsheetsMex,
FUN = excel.to.R2,
wb = df_Mex,
t = 'SO'))
Mex$mx <- as.numeric(Mex$mx)
Mex$qx <- as.numeric(Mex$qx)
Data.LT <- rbind(Data.LT,Mex)
# Data with life expectancy -----------------------------------------------
ex     <- Data.LT[Data.LT$Age==0,]
ex$Sex <- as.numeric(ex$Sex)
ex$Sex <- factor(ex$Sex,levels = c(1, 2), labels = c("Males", "Females"))
ex <- as.data.frame(ex)
save(ex,file= "R/ex_App/Life_expectancy.RData")
setwd("C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA/R/ex_App/")
library(shiny)
library(ggplot2)
rsconnect::setAccountInfo(name='jmaburto',
token='7310E08D0D081D3C3CABCAA90D18045E',
secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
load('Life_expectancy.RData')
name <- "CHILE"
ggplot(ex[ex$Country == name,], aes(Year,ex))+
geom_line(aes(colour = Source), lwd=1)+
geom_point(aes(shape = Source,colour = Source),cex=5)+
scale_shape_manual(values=c(16:20))+
theme(strip.text.x = element_text(size = 15))+
facet_wrap(~Sex,ncol = 2)
runApp()
setwd("C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA/R/CoD_App/")
library(shiny)
rsconnect::setAccountInfo(name='wb-lac',
token='06E52479A00F914E6EE44A17FFEA7E80',
secret='D7wg0N0miuHwY8reIRkCRy38E+TSCGXy+nHgm+KH')
runApp()
setwd("C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA/R/ex_App/")
library(shiny)
library(ggplot2)
#rsconnect::setAccountInfo(name='jmaburto',
#                          token='7310E08D0D081D3C3CABCAA90D18045E',
#                          secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
rsconnect::setAccountInfo(name='wb-lac',
token='06E52479A00F914E6EE44A17FFEA7E80',
secret='D7wg0N0miuHwY8reIRkCRy38E+TSCGXy+nHgm+KH')
runApp()
runApp()
runApp()
library(RColorBrewer)
library(latticeExtra)
library(xtable)
library(reshape2)
library(data.table)
if (system("hostname",intern=TRUE) == "ADM-108625") {
setwd("C:/Users/jmaburto/Documents/GitHub/DecompMex/DecompMex")
} else {
if (system("hostname",intern=TRUE) %in% c("triffe-N80Vm", "tim-ThinkPad-L440")){
# if I'm on the laptop
setwd("/home/tim/git/DecompMex/DecompMex")
} else {
# in that case I'm on Berkeley system, and other people in the dept can run this too
setwd(paste0("/data/commons/",system("whoami",intern=TRUE),"/git/DecompMex/DecompMex"))
}}
source("R/Functions.R")
###### for ages 0 - 14 ##############################################################
#####################################################################################
### For females
DecomF0_14 <- local(get(load("Data/ContribFemales0_14.Rdata")))
DecomM0_14 <- local(get(load("Data/ContribMales0_14.Rdata")))
# TR: rather than growing a data.frame in a loop, do it in an lapply()
DF0_14 <- do.call(rbind,
lapply(1:length(DecomF0_14),
FUN = my_reshape.function,
DecompIn = DecomF0_14,
lower = 0,
upper = 14))
DM0_14 <- do.call(rbind,
lapply(1:length(DecomM0_14),
FUN = my_reshape.function,
DecompIn = DecomM0_14,
lower = 0,
upper = 14))
###### for ages 15 - 49 ##############################################################
#####################################################################################
DecomF15_49 <- local(get(load("Data/ContribFemales15_49.Rdata")))
DecomM15_49 <- local(get(load("Data/ContribMales15_49.Rdata")))
# then do the aggregate-reshape
DF15_49 <- do.call(rbind,
lapply(1:length(DecomF15_49),
FUN = my_reshape.function,
DecompIn = DecomF15_49,
lower = 15,
upper = 49))
DM15_49 <- do.call(rbind,
lapply(1:length(DecomM15_49),
FUN = my_reshape.function,
DecompIn = DecomM15_49,
lower = 15,
upper = 49))
###### for ages 40 - 74 ##############################################################
#####################################################################################
### For females
DecomF50_84 <- local(get(load("Data/ContribFemales50_84.Rdata")))
DecomM50_84 <- local(get(load("Data/ContribMales50_84.Rdata")))
DF50_84     <- do.call(rbind,
lapply(1:length(DecomF50_84),
FUN = my_reshape.function,
DecompIn = DecomF50_84,
lower = 50,
upper = 84))
DM50_84     <- do.call(rbind,
lapply(1:length(DecomM50_84),
FUN = my_reshape.function,
DecompIn = DecomM50_84,
lower = 50,
upper = 84))
## Data frame with results for males
gdata::keep(DF0_14,DM0_14,DF15_49,DM15_49,DF50_84,DM50_84,sure=TRUE)
#####################################################################################
#####################################################################################
#####################################################################################
#Start Graph analysis################################################################
#####################################################################################
#1.Causes amenable to medical service
#2.Diabetes
#3.Ischemic heart diseases
#4.HIV/AIDS
#5.Lung cancer
#6.Cirrhosis
#7.Homicide
#8.Road traffic accidents
#9.Suicide
#10.Other causes
#####################################################################################
#Groups used in the article:
# 1. Amenable to medical service: 1+2+3+4+6
# 2. Diabetes: 5
# 3. IHD:7
# 4. HIV:8
# 5. Lung cancer: 10
# 6. Cirrhosis: 11
# 7. Homicide: 12
# 8. Road traffic: 13
# 9. Suicide: 9
# 10. All other causes: 14+15+16
# TR: I simplified this by making a recode vec here too,
# but it seems this could have happened in my_reshape.function() too, no?
cause.labels <- c("AMS","Diabetes","IHD","HIV","Lung cancer","Cirrhosis","Homicide",
"RTA","Suicide","RC")
lev.am <- levels(DM0_14$AMCategory)
DM0_14$AMLabel  <- factor(DM0_14$AMCategory, levels =lev.am, labels = cause.labels)
DF0_14$AMLabel  <- factor(DF0_14$AMCategory, levels = lev.am, labels = cause.labels)
DF15_49$AMLabel <- factor(DF15_49$AMCategory, levels =lev.am, labels = cause.labels)
DM15_49$AMLabel <- factor(DM15_49$AMCategory, levels = lev.am, labels = cause.labels)
DF50_84$AMLabel <- factor(DF50_84$AMCategory, levels = lev.am, labels = cause.labels)
DM50_84$AMLabel <- factor(DM50_84$AMCategory, levels = lev.am, labels = cause.labels)
# Age group codes
DM0_14$Ages  <- 1
DF0_14$Ages  <- 1
DF15_49$Ages <- 2
DM15_49$Ages <- 2
DF50_84$Ages <- 3
DM50_84$Ages <- 3
# Sex codes
DM0_14$Sex  <- 2
DF0_14$Sex  <- 1
DF15_49$Sex <- 1
DM15_49$Sex <- 2
DF50_84$Sex <- 1
DM50_84$Sex <- 2
Data <- rbind(DM0_14,DF0_14,DM15_49,DF15_49,DM50_84,DF50_84)
gdata::keep(Data, sure = TRUE)
###########################################
# TR: make two recode vectors:
# states codes and names
state.code.recvec <-
c("Aguascalientes","Baja California","Baja California Sur","Campeche",
"Coahuila","Colima","Chiapas","Chihuahua","Mexico City","Durango",
"Guanajuato","Guerrero","Hidalgo","Jalisco","Mexico State","Michoacan",
"Morelos","Nayarit","Nuevo Leon","Oaxaca","Puebla","Queretaro",
"Quintana Roo","San Luis Potosi","Sinaloa","Sonora","Tabasco","Tamaulipas",
"Tlaxcala","Veracruz","Yucatan","Zacatecas")
names(state.code.recvec) <- 1:32
# state and region codes
region.recvec            <- c(2,3,3,1,3,2,1,3,2,3,2,1,2,2,2,
2,1,2,3,1,1,2,1,3,3,3,1,3,2,1,1,3)
names(region.recvec)     <- 1:32
# adding recode columns is then easy
Data$Statenom            <- state.code.recvec[as.character(Data$State)]
Data$region              <- region.recvec[as.character(Data$State)]
# Turn region, Ages, Sex into levelled/ordered factors
Data$region <- factor(Data$region,
levels = c(1, 2, 3),
labels = c("South", "Central", "North"))
Data$Ages   <- factor(Data$Ages,
levels = c(1, 2, 3),
labels = c("0-14", "15-49", "50-84"))
Data$Sex    <- factor(Data$Sex,
levels = c(1, 2),
labels = c("Females", "Males"))
load("Data/order.RData")
Data <- merge(Data,ref.order, by = c("State"),all.y = T)
Data$Statenom<-with(Data,reorder(reorder(Statenom,Order),as.numeric(region)))
##### Figure function
source("R/Functions_fig.R")
brksl <- seq(0,1.5,by=.25)
brksval <- seq(0,1.5,by=.25/10)
Figure.heatmap <- function(SubData,Age.group,brksl,brksval){
useOuterStrips(levelplot(Contribution ~ Year*Statenom|AMLabel+region,
data=SubData,
main=F,
ylab.right = list("(Years)",cex=1.2),par.settings=my.settings,
xlab=list("Year",cex=1.2),ylab=list("State",cex=1.2),
#colorkey=T,
colorkey = list(at = brksl, labels=list(at=brksl)),
ylim= c(rep(list(c(1,10)),7),rep(list(c(11,21)),7),rep(list(c(22,32)),7)),
between = list(x = -8.5),scales=list(x=list(cex=1.3,rot=45,at=seq(1990,2015,5)),
y=list(relation="free",at = c(rep(list(c(1:32)),21)),
labels=list(levels(Data$Statenom)[],NULL,NULL,NULL,NULL,NULL,NULL,
levels(Data$Statenom)[],NULL,NULL,NULL,NULL,NULL,NULL,
levels(Data$Statenom)[],NULL,NULL,NULL,NULL,NULL,NULL),
tck=c(0,1),cex=1.2)),par.strip.text=list(cex=1.4),
at=brksval,
col.regions=colorRampPalette(brewer.pal(9,"YlOrRd"),space = "Lab"),
#at=c(do.breaks(c(0,0.2),20),
#    do.breaks(c(0.200001,0.6),20),
#    do.breaks(c(0.6000001,1.2),20),
#    do.breaks(c(1.2000001,2.6),20)),
#col.regions=colorRampPalette(brewer.pal(9,"YlOrRd")[c(1,4,6,9)]),
),strip.left=T)
}
#Male Adults (same scale as appendic)
brksl <- seq(0,2.75,by=.25)
brksval <- seq(0,2.75,by=.25/10)
Heat.map2 <- Figure.heatmap(SubData=Data[Sex=="Males" & Ages=="50-84" &
AMCategory!="g10" & AMCategory!="g4" & AMCategory!="g9"],
Age.group="female adults",brksl,brksval)
Heat.map2
pdf(file="Figures/Adult_Male_heatmap.pdf",width=20,height=11,pointsize=12)
print(Heat.map2)
dev.off()
Heat.map2
